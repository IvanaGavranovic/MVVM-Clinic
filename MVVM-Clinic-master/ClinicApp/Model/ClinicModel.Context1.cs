//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicApp.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClinicDBEntities : DbContext
    {
        public ClinicDBEntities()
            : base("name=ClinicDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
          //  modelBuilder.Conventions.Remove<Pregled>();
           throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departman> Departmen { get; set; }
        public virtual DbSet<Dijagnoza_Specijaliste> Dijagnoza_Specijaliste { get; set; }
        public virtual DbSet<Doktor_Departman> Doktor_Departman { get; set; }
        public virtual DbSet<Doktor_op_pr_Pregled_Pacijent> Doktor_op_pr_Pregled_Pacijent { get; set; }
        public virtual DbSet<Doktor_opste_prakse_Pregled1> Doktor_opste_prakse_Pregled1 { get; set; }
        public virtual DbSet<Doktor_specijalista_Uput> Doktor_specijalista_Uput { get; set; }
        public virtual DbSet<Ishod_Pregleda> Ishod_Pregleda { get; set; }
        public virtual DbSet<Ishod_Pregleda_Dijagnoza> Ishod_Pregleda_Dijagnoza { get; set; }
        public virtual DbSet<Ishod_Pregleda_Uput> Ishod_Pregleda_Uput { get; set; }
        public virtual DbSet<Klinika_Departman> Klinika_Departman { get; set; }
        public virtual DbSet<Klinika> Klinikas { get; set; }
        public virtual DbSet<Pacijent_Departman> Pacijent_Departman { get; set; }
        public virtual DbSet<Pregled> Pregleds { get; set; }
        public virtual DbSet<Terapija_Specijaliste> Terapija_Specijaliste { get; set; }
        public virtual DbSet<Terapija> Terapijas { get; set; }
        public virtual DbSet<Ugovor> Ugovors { get; set; }
        public virtual DbSet<Zdravstveni_Karton> Zdravstveni_Karton { get; set; }
        public virtual DbSet<Korisnik> Korisniks { get; set; }
    
        [DbFunction("ClinicDBEntities", "GetAllDepartments")]
        public virtual IQueryable<GetAllDepartments_Result> GetAllDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAllDepartments_Result>("[ClinicDBEntities].[GetAllDepartments]()");
        }
    
        public virtual int BrojacDnevnihPregledaZaDoktora(Nullable<int> doctorId, string date, ObjectParameter count)
        {
            var doctorIdParameter = doctorId.HasValue ?
                new ObjectParameter("doctorId", doctorId) :
                new ObjectParameter("doctorId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrojacDnevnihPregledaZaDoktora", doctorIdParameter, dateParameter, count);
        }
    }
}
